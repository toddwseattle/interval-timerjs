{"version":3,"sources":["assets/analog-watch.mp3","components/TimeFormat.js","components/Alarm.js","components/TimeCircle.js","components/TimerDisplay.js","components/IntervalInput.js","components/TimeSpan.js","components/BreakTimeInput.js","containers/Commands.js","components/PlayPause.js","components/CenterH3.js","components/IntervalDisplay.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TimeFormat","_ref","_ref$seconds","seconds","pad","num","size","substr","secPart","dayPart","HOUR","Math","floor","hourPart","minutePart","output","react_default","a","createElement","Alarm","play","lib_default","url","soundfile","autoLoad","playStatus","Sound","status","PLAYING","TimeCircleDiv","position","TimeCircleText","textAlign","lineHeight","width","zIndex","Svg","transform","CircleAnimationDefault","strokeDasharray","strokeDashoffset","transition","PI","TimeCircle","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setColors","_ref$background","background","_ref$stopFill","stopFill","_ref$playFill","playFill","_ref$stopSweep","stopSweep","_ref$playSweep","playSweep","state","colors","objectSpread","startinterval","space","arguments","length","undefined","interval","setInterval","tick","bind","assertThisInitialized","componentDidMount","setState","mounted","componentWillUnMount","clearInterval","reset","resetTimer","remainCount","timerDone","totalCount","sliceSize","circumference","resetCallback","render","circleA","circleAnimation","divStyle","backgroundColor","style","circleText","components_TimeFormat","circleSize","height","xmlns","id","strokeWidth","r","radius","cy","cx","fill","stroke","components_Alarm","toString","Component","TimeDisplay","toDisplay","_ref$duration","duration","_ref$play","_ref$reset","index_es","variant","align","components_TimeCircle","IntervalInput","intervals","valueChange","options","i","push","MenuItem_default","value","key","className","Select_default","name","onChange","console","log","TimeSpan","_ref$timespan","timespan","onselect","label","map","ts","BreakTimeInput","_ref$bTime","bTime","Commands","_Component","setIntervalHandler","e","ivals","parseInt","target","onchange","setBreakHandler","tbr","breakspan","setTimeSpanHandler","tspan","show","container","direction","justify","alignItems","spacing","item","components_IntervalInput","components_TimeSpan","components_BreakTimeInput","inherits","defaultProps","PlayPause","bColor","Button_default","color","onClick","CenterH3","children","_ref$lastTimeStyle","lastTimeStyle","IntervalDisplay","remain","total","Typography_default","LOCAL_STORE_KEY","App","intervalsRemaining","breakDuration","takingBreak","breakReset","intervalDone","cycleDone","done","newDuration","intervalChangeHandler","breakCompleteHandler","_ref$intervals","_ref$breakspan","saveState","localStorage","setItem","JSON","stringify","resetComplete","breakResetComplete","ppClick","classes","breakMessage","root","Grid_default","Paper_default","containers_Commands","components_IntervalDisplay","TimerDisplay","stateFromStore","getItem","parse","withStyles","theme","flexGrow","paper","padding","unit","palette","text","secondary","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c905d9ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/analog-watch.61eb5a40.mp3\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TimeFormat = ({ seconds = 0 }) => {\r\n  function pad(num, size) {\r\n    return (\"000000000\" + num).substr(-size);\r\n  }\r\n  const MINUTE = 60;\r\n  const HOUR = 360;\r\n  const DAY = HOUR * 24;\r\n\r\n  const secPart = seconds % MINUTE;\r\n  const dayPart = seconds >= DAY ? Math.floor(seconds / DAY) : 0;\r\n  const hourPart =\r\n    seconds >= HOUR ? Math.floor(seconds - (dayPart * DAY) / HOUR) : 0;\r\n  const minutePart =\r\n    seconds >= MINUTE\r\n      ? Math.floor((seconds - dayPart * DAY - hourPart * HOUR) / 60)\r\n      : 0;\r\n  let output = dayPart > 0 ? pad(dayPart, 2) + \":\" : \"\";\r\n  output += hourPart > 0 ? pad(hourPart, 2) + \":\" : \"\";\r\n  output += minutePart > 0 ? pad(minutePart, 2) + \":\" : \"\";\r\n  output += pad(secPart, 2);\r\n\r\n  return <div>{output}</div>;\r\n};\r\n\r\nTimeFormat.propTypes = {\r\n  seconds: PropTypes.number\r\n};\r\n\r\nexport default TimeFormat;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport soundfile from \"../assets/analog-watch.mp3\";\r\nimport Sound from \"react-sound\";\r\n\r\nconst Alarm = ({ play }) => {\r\n  //let myRef = React.createRef();\r\n  if (play) {\r\n    return (\r\n      <Sound\r\n        url={soundfile}\r\n        autoLoad={true}\r\n        playStatus={Sound.status.PLAYING}\r\n      />\r\n    );\r\n  } else {\r\n    return <span />;\r\n  }\r\n};\r\n\r\nAlarm.propTypes = {\r\n  play: PropTypes.bool\r\n};\r\n\r\nexport default Alarm;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TimeFormat from \"./TimeFormat\";\r\nimport Alarm from \"./Alarm\";\r\n// default styles\r\nconst TimeCircleDiv = { position: \"relative\" };\r\nconst TimeCircleText = {\r\n  textAlign: \"center\",\r\n  position: \"absolute\",\r\n  lineHeight: \"120px\",\r\n  width: \"100%\",\r\n  zIndex: 2\r\n};\r\nconst Svg = { transform: \"rotate(-90deg)\" };\r\nconst CircleAnimationDefault = {\r\n  strokeDasharray: 400,\r\n  strokeDashoffset: 430,\r\n  transition: \"all 1s linear\"\r\n};\r\n\r\nconst PI = 3.1415927;\r\n\r\nclass TimeCircle extends Component {\r\n  static propTypes = {\r\n    seconds: PropTypes.number.isRequired,\r\n    circleSize: PropTypes.number,\r\n    play: PropTypes.bool,\r\n    reset: PropTypes.bool,\r\n    resetCallback: PropTypes.func,\r\n    timerDone: PropTypes.func,\r\n    colors: PropTypes.object\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const circleSize = props.circleSize ? props.circleSize : 160;\r\n    const totalCount = props.seconds;\r\n    const circumference = circleSize * 0.875 * PI;\r\n    this.circleAnimation = {\r\n      ...CircleAnimationDefault,\r\n      strokeDasharray: circumference,\r\n      zIndex: 1\r\n    };\r\n    this.circleText = {\r\n      ...TimeCircleText,\r\n      lineHeight: (1 * circleSize * 0.75).toString() + \"px\"\r\n    };\r\n    this.state = {\r\n      circleSize: circleSize,\r\n      radius: 1 * ((circleSize / 2) * 0.875),\r\n      circumference: circumference,\r\n      sliceSize: 1 * (circumference / (totalCount - 1)),\r\n      mounted: false,\r\n      totalCount: totalCount,\r\n      remainCount: totalCount,\r\n      colors: this.setColors(this.props.colors ? this.props.colors : {})\r\n    };\r\n    this.startinterval();\r\n  }\r\n  setColors = ({\r\n    background = \"lightblue\",\r\n    stopFill = \"Red\",\r\n    playFill = \"Green\",\r\n    stopSweep = \"Black\",\r\n    playSweep = \"Blue\"\r\n  }) => {\r\n    const newColors =\r\n      this.state && this.state.colors\r\n        ? {\r\n            ...this.state.colors,\r\n            background,\r\n            stopFill,\r\n            playFill,\r\n            stopSweep,\r\n            playSweep\r\n          }\r\n        : { background, stopFill, stopSweep, playSweep, playFill };\r\n    return newColors;\r\n  };\r\n  startinterval = (space = 1000) => {\r\n    this.interval = setInterval(this.tick.bind(this), space);\r\n  };\r\n  componentDidMount = () => {\r\n    this.setState({ ...this.state, mounted: true });\r\n  };\r\n  componentWillUnMount = () => {\r\n    if (this.interval) clearInterval(this.interval);\r\n  };\r\n  tick = () => {\r\n    if (!this.state.mounted) return;\r\n    if (this.props.reset) {\r\n      this.resetTimer();\r\n    } else if (this.state.remainCount > 0 && this.props.play) {\r\n      this.setState({\r\n        ...this.state,\r\n        remainCount: this.state.remainCount - 1\r\n      });\r\n    } else if (this.state.remainCount === 0 && this.props.play) {\r\n      this.props.timerDone();\r\n    }\r\n  };\r\n\r\n  resetTimer = () => {\r\n    const totalCount = this.props.seconds ? this.props.seconds : 10;\r\n    this.setState({\r\n      ...this.state,\r\n      totalCount: totalCount,\r\n      remainCount: totalCount,\r\n      resetTimer: false,\r\n      sliceSize: 1 * (this.state.circumference / (totalCount - 1))\r\n    });\r\n    this.props.resetCallback();\r\n  };\r\n  render = () => {\r\n    let circleA = { ...this.circleAnimation };\r\n    circleA.strokeDashoffset =\r\n      this.state.remainCount > 0\r\n        ? this.state.sliceSize * (this.state.remainCount - 1)\r\n        : 0;\r\n    const divStyle = {\r\n      ...TimeCircleDiv,\r\n      backgroundColor: this.state.colors.background\r\n    };\r\n    return (\r\n      <div style={divStyle}>\r\n        <h2 style={this.circleText}>\r\n          <TimeFormat seconds={this.state.remainCount} />\r\n        </h2>\r\n        <svg\r\n          width={this.state.circleSize}\r\n          height={this.state.circleSize}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          style={Svg}\r\n        >\r\n          <circle\r\n            id=\"timecircle\"\r\n            style={circleA}\r\n            strokeWidth={8}\r\n            r={this.state.radius}\r\n            cy={1 * (this.state.circleSize / 2) + 1}\r\n            cx={1 * (this.state.circleSize / 2) + 1}\r\n            fill={\r\n              this.props.play\r\n                ? this.state.colors.playFill\r\n                : this.state.colors.stopFill\r\n            }\r\n            stroke={\r\n              this.props.play\r\n                ? this.state.colors.playSweep\r\n                : this.state.colors.stopSweep\r\n            }\r\n          />\r\n        </svg>\r\n        <Alarm play={this.state.remainCount === 0 && this.props.play} />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default TimeCircle;\r\n","// Timer Stateless Functional Components\r\nimport React from \"react\";\r\nimport TimeCircle from \"./TimeCircle\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nexport const TimeDisplay = ({\r\n  toDisplay,\r\n  duration = 60,\r\n  play = true,\r\n  reset = false,\r\n  resetCallback,\r\n  timerDone\r\n}) => {\r\n  return (\r\n    <Paper>\r\n      <div>\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          {toDisplay}\r\n        </Typography>\r\n        <TimeCircle\r\n          seconds={duration}\r\n          play={play}\r\n          reset={reset}\r\n          resetCallback={resetCallback}\r\n          timerDone={timerDone}\r\n        />\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TimeDisplay;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { InputLabel, FormControl } from \"@material-ui/core\";\r\n\r\nfunction IntervalInput({ intervals, valueChange }) {\r\n  let options = [];\r\n  for (let i = 1; i < 11; i++) {\r\n    options.push(\r\n      <MenuItem value={i} key={\"int-\" + i}>\r\n        {i} Times\r\n      </MenuItem>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <FormControl>\r\n        <InputLabel className=\"label\">Repeat</InputLabel>\r\n        <Select\r\n          value={intervals || 2}\r\n          name=\"inverval\"\r\n          onChange={\r\n            valueChange ||\r\n            (() => {\r\n              console.log(\"default\");\r\n            })\r\n          }\r\n        >\r\n          {options}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntervalInput.propTypes = {\r\n  intervals: PropTypes.number,\r\n  valueChange: PropTypes.func\r\n};\r\n\r\nexport default IntervalInput;\r\n","import React from \"react\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { InputLabel, FormControl } from \"@material-ui/core\";\r\n\r\nfunction TimeSpan({ timespan = 60, onselect }) {\r\n  // let dTime = 60;\r\n  let timeselects = [\r\n    { id: \"sec-15\", duration: 15, label: \"0:15\" },\r\n    { id: \"sec-30\", duration: 30, label: \"0:30\" },\r\n    { id: \"sec-60\", duration: 60, label: \"1:00\" },\r\n    { id: \"sec-90\", duration: 90, label: \"1.30\" },\r\n    { id: \"sec-120\", duration: 120, label: \"2:00\" },\r\n    { id: \"sec-150\", duration: 150, label: \"2:30\" },\r\n    { id: \"sec-180\", duration: 180, label: \"3:00\" },\r\n    { id: \"sec-240\", duration: 240, label: \"4:00\" },\r\n    { id: \"sec-300\", duration: 300, label: \"5:00\" }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <FormControl>\r\n        <InputLabel className=\"label\">Time</InputLabel>\r\n        <Select\r\n          value={timespan}\r\n          name=\"timespan\"\r\n          onChange={\r\n            onselect ||\r\n            (() => {\r\n              console.log(\"default\");\r\n            })\r\n          }\r\n        >\r\n          {timeselects.map(ts => (\r\n            <MenuItem key={ts.id} value={ts.duration}>\r\n              {ts.label}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>{\" \"}\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeSpan;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { InputLabel, FormControl } from \"@material-ui/core\";\r\n\r\nfunction BreakTimeInput({ bTime = 10, onselect }) {\r\n  let breakSelects = [\r\n    { id: \"bks-0\", duration: 0, label: \"0:00\" },\r\n    { id: \"bks-05\", duration: 5, label: \"0:05\" },\r\n    { id: \"bks-10\", duration: 10, label: \"0:10\" },\r\n    { id: \"bks-15\", duration: 15, label: \"0:15\" },\r\n    { id: \"bks-30\", duration: 30, label: \"0:30\" },\r\n    { id: \"bks-60\", duration: 60, label: \"1:00\" },\r\n    { id: \"bks-75\", duration: 75, label: \"1:15\" },\r\n    { id: \"bks-90\", duration: 90, label: \"1:30\" },\r\n    { id: \"bks-120\", duration: 120, label: \"2:00\" }\r\n  ];\r\n  return (\r\n    <div>\r\n      <FormControl>\r\n        <InputLabel className=\"label\">Break Between</InputLabel>\r\n        <Select\r\n          value={bTime}\r\n          name=\"btime\"\r\n          onChange={\r\n            onselect ||\r\n            (() => {\r\n              console.log(\"default\");\r\n            })\r\n          }\r\n        >\r\n          {breakSelects.map(ts => (\r\n            <MenuItem key={ts.id} value={ts.duration}>\r\n              {ts.label}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\nBreakTimeInput.propTypes = {\r\n  bTime: PropTypes.number,\r\n  onselect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default BreakTimeInput;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport IntervalInput from \"../components/IntervalInput\";\r\nimport TimeSpan from \"../components/TimeSpan\";\r\nimport BreakTimeInput from \"../components/BreakTimeInput\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport class Commands extends Component {\r\n  static propTypes = {\r\n    show: PropTypes.bool,\r\n    onchange: PropTypes.func,\r\n    intervals: PropTypes.number,\r\n    timespan: PropTypes.number,\r\n    breakspan: PropTypes.number\r\n  };\r\n  static defaultProps = {\r\n    show: true,\r\n    intervals: 2,\r\n    timespan: 60,\r\n    breakspan: 0\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      intervals: props.intervals,\r\n      timespan: props.timespan,\r\n      breakspan: props.breakspan\r\n    };\r\n  }\r\n  setIntervalHandler = e => {\r\n    const ivals = parseInt(e.target.value);\r\n    this.setState({ intervals: ivals });\r\n    if (this.props.onchange) {\r\n      this.props.onchange({ ...this.state, intervals: ivals });\r\n    }\r\n  };\r\n  setBreakHandler = e => {\r\n    const tbr = parseInt(e.target.value, 10);\r\n    this.setState({ breakspan: tbr });\r\n    if (this.props.onchange) {\r\n      this.props.onchange({ ...this.state, breakspan: tbr });\r\n    }\r\n  };\r\n  setTimeSpanHandler = e => {\r\n    const tspan = parseInt(e.target.value, 10);\r\n    this.setState({ timespan: tspan });\r\n    if (this.props.onchange) {\r\n      this.props.onchange({ ...this.state, timespan: tspan });\r\n    }\r\n  };\r\n  render = () => {\r\n    let comDisp = this.props.show ? (\r\n      <div>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={16}\r\n        >\r\n          <Grid item>\r\n            <IntervalInput\r\n              valueChange={this.setIntervalHandler.bind(this)}\r\n              intervals={this.state.intervals}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TimeSpan\r\n              onselect={this.setTimeSpanHandler.bind(this)}\r\n              timespan={this.state.timespan}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <BreakTimeInput\r\n              onselect={this.setBreakHandler.bind(this)}\r\n              bTime={this.state.breakspan}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    ) : (\r\n      <div />\r\n    );\r\n    return comDisp;\r\n  };\r\n}\r\n\r\nexport default Commands;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function PlayPause({ onchange, play }) {\r\n  const bColor = play ? \"secondary\" : \"primary\";\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color={bColor}\r\n        onClick={onchange}\r\n      >\r\n        {play ? \"Pause\" : \"Play\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nPlayPause.propTypes = {\r\n  onchange: PropTypes.func.isRequired,\r\n  play: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function CenterH3({\r\n  children,\r\n  lastTimeStyle = { color: \"red\" }\r\n}) {\r\n  return (\r\n    <Typography variant=\"h3\" align=\"center\" style={lastTimeStyle}>\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CenterH3 from \"./CenterH3\";\r\n\r\nconst IntervalDisplay = ({ remain, total }) => {\r\n  if (remain > 1) {\r\n    return (\r\n      <Typography variant=\"h3\" align=\"center\">\r\n        {remain} of {total} Times Left\r\n      </Typography>\r\n    );\r\n  } else if (remain === 1 && total > 1) {\r\n    return <CenterH3>Last Time </CenterH3>;\r\n  } else if (remain === 1) {\r\n    return <CenterH3>One Interval</CenterH3>;\r\n  } else {\r\n    return <CenterH3>Intervals Complete</CenterH3>;\r\n  }\r\n};\r\n\r\nIntervalDisplay.propTypes = {\r\n  remain: PropTypes.number\r\n};\r\n\r\nexport default IntervalDisplay;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"typeface-roboto\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TimerDisplay from \"./components/TimerDisplay\";\nimport Commands from \"./containers/Commands\";\nimport PlayPause from \"./components/PlayPause\";\nimport IntervalDisplay from \"./components/IntervalDisplay\";\nconst LOCAL_STORE_KEY = \"iv-js-state-01\";\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n});\n\nclass App extends Component {\n  state = {\n    intervals: 1,\n    intervalsRemaining: 1,\n    duration: 60,\n    breakDuration: 0,\n    takingBreak: false,\n    breakReset: false,\n    reset: false,\n    play: false,\n    intervalDone: false,\n    cycleDone: false\n  };\n  constructor(props) {\n    super(props);\n    const stateFromStore = localStorage.getItem(LOCAL_STORE_KEY);\n    if (stateFromStore && stateFromStore.length > 0) {\n      this.state = JSON.parse(stateFromStore);\n    }\n  }\n  intervalDone = () => {\n    const remain = this.state.intervalsRemaining - 1;\n    const done = remain <= 0;\n    const newDuration = done ? 0 : this.state.duration;\n    const takingBreak = this.state.breakDuration > 0 && !done;\n    this.setState({\n      // ...this.state,\n      intervalsRemaining: remain,\n      duration: newDuration,\n      cycleDone: done,\n      reset: true,\n      breakReset: true,\n      play: this.state.play && !done,\n      intervalDone: true,\n      takingBreak: takingBreak\n    });\n    if (done) {\n      this.intervalChangeHandler({\n        intervals: this.state.intervals,\n        timespan: this.state.duration,\n        breakspan: this.state.breakDuration\n      });\n    }\n  };\n\n  breakCompleteHandler = () => {\n    this.setState({ takingBreak: false, breakReset: true });\n  };\n\n  intervalChangeHandler = ({ intervals = 1, timespan = 60, breakspan = 0 }) => {\n    this.setState({\n      // ...this.state,\n      intervals: intervals,\n      intervalsRemaining: intervals,\n      duration: timespan,\n      breakDuration: breakspan,\n      reset: true,\n      breakReset: true,\n      play: false\n    });\n    const saveState = {\n      ...this.state,\n      intervals,\n      intervalsRemaining: intervals,\n      duration: timespan,\n      breakDuration: breakspan,\n      reset: true,\n      breakReset: true,\n      play: false\n    };\n    localStorage.setItem(LOCAL_STORE_KEY, JSON.stringify(saveState));\n  };\n  resetComplete = () => {\n    this.setState({ reset: false });\n  };\n  breakResetComplete = () => {\n    this.setState({ breakReset: false });\n  };\n  ppClick = () => {\n    this.setState({ ...this.state, play: !this.state.play });\n  };\n  render = () => {\n    const { classes } = this.props;\n    const breakMessage = this.state.takingBreak ? \"Start in:\" : \"Break\";\n    return (\n      <div className={classes.root}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={24}\n        >\n          <Grid item>\n            <Paper>\n              <Commands\n                onchange={this.intervalChangeHandler.bind(this)}\n                intervals={this.state.intervals}\n                timespan={this.state.duration}\n                breakspan={this.state.breakDuration}\n              />\n            </Paper>\n          </Grid>\n          <Paper>\n            <PlayPause onchange={this.ppClick} play={this.state.play} />\n          </Paper>\n          <Grid item>\n            <Paper>\n              <IntervalDisplay\n                remain={this.state.intervalsRemaining}\n                total={this.state.intervals}\n              />\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={16}\n              >\n                <Grid item>\n                  <TimerDisplay\n                    toDisplay={\n                      this.state.cycleDone\n                        ? \"Time's Up!\"\n                        : \"Interval #\" +\n                          (this.state.intervals -\n                            this.state.intervalsRemaining +\n                            1)\n                    }\n                    duration={this.state.duration}\n                    play={this.state.play && !this.state.takingBreak}\n                    reset={this.state.reset}\n                    resetCallback={this.resetComplete.bind(this)}\n                    timerDone={this.intervalDone.bind(this)}\n                  />\n                </Grid>\n                <Grid item>\n                  <TimerDisplay\n                    toDisplay={breakMessage}\n                    duration={this.state.breakDuration}\n                    play={this.state.play && this.state.takingBreak}\n                    reset={this.state.breakReset}\n                    resetCallback={this.breakResetComplete.bind(this)}\n                    timerDone={this.breakCompleteHandler.bind(this)}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  };\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}